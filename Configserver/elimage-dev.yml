# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: DEBUG
        io.github.jhipster: DEBUG
        id.co.elevenia: DEBUG
        org.hibernate.SQL: DEBUG
#        org.hibernate.type: TRACE
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#        org.hibernate.type.EnumType=TRACE
        org.hibernate.pretty: DEBUG
        org.springframework.jdbc.core.JdbcTemplate: DEBUG
        org.springframework.jdbc.core.StatementCreatorUtils: TRACE

eureka:
    instance:
        prefer-ip-address: true
    client:
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@service-registry:8761/eureka/

spring:
    profiles:
        active: dev
        include:
            - swagger
            # Uncomment to activate TLS for the dev profile
            #- tls
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use Webpack dev server + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://localhost:5432/elimage
        username: postgres
        password: postgres
        hikari:
            auto-commit: false
    jpa:
        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL82Dialect
        database: POSTGRESQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.connection.provider_disables_autocommit: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: elimage
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
            hibernate.default_schema: app
            hibernate.show_sql: true
            hibernate.use_sql_comments: false
            hibernate.format_sql: true
    data:
        jest:
            uri: http://elasticnode:9200
        elasticsearch:
            cluster-name: elasticsearch
            cluster-nodes: elasticnode:9500
            #properties:
            #    path:
            #        logs: target/elasticsearch/log
            #        data: target/elasticsearch/data
    liquibase:
        enabled: true
        url: jdbc:postgresql://postgresql:5432/elimage
        contexts: dev
        default-schema: app
        
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-duration: PT1S # 1 second, see the ISO 8601 standard
    thymeleaf:
        cache: false
    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
        base-url: http://monitoring-zipkin:9411
        enabled: true
        locator:
            discovery:
                enabled: true
    

server:
    port: 9870

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need to activate TLS (see application-tls.yml)
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html
                enabled: true
                update-interval: 3
                url: http://mancenter-host:9090/mancenter
    # CORS is disabled by default on microservices, as you should access them through a gateway.
    # If you want to enable it, please uncomment the configuration below.
    # cors:
        # allowed-origins: "*"
        # allowed-methods: "*"
        # allowed-headers: "*"
        # exposed-headers: "Authorization,Link,X-Total-Count"
        # allow-credentials: true
        # max-age: 1800
    security:
        client-authorization:
            access-token-uri: http://elsa/oauth/token
            token-service-id: elsa
            client-id: internal
            client-secret: internal
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: elimage@localhost
        base-url: http://127.0.0.1:9870
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx:
            enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: true
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: true
            host: monitoring-logstash
            port: 5000
            queue-size: 512
oauth2:
    signature-verification:
        public-key-endpoint-uri: http://elsa/oauth/token_key
        #ttl for public keys to verify JWT tokens (in ms)
        ttl: 3600000
        #max. rate at which public keys will be fetched (in ms)
        public-key-refresh-rate-limit: 10000
    web-client-configuration:
        #keep in sync with UAA configuration
        client-id: curl-client
        secret: admin

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

storage:
    upload-dir: /data1/upload

custom:
    config: 
        uploadDir: /data1/upload
        productId: 2
